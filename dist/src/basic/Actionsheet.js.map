{"version":3,"sources":["../../../src/basic/Actionsheet.js"],"names":["ActionSheetContainer","props","state","modalVisible","items","config","callback","Platform","OS","options","filtered","map","item","text","ActionSheetIOS","showActionSheetWithOptions","setState","title","message","destructiveButtonIndex","cancelButtonIndex","autoHide","duration","console","warn","backgroundColor","flex","justifyContent","minHeight","height","length","maxHeight","Dimensions","get","padding","elevation","color","marginHorizontal","marginTop","index","String","parseInt","borderColor","marginLeft","icon","iconColor","undefined","paddingLeft","actionsheetInstance","_root","showActionSheet","hideActionSheet","Component","propTypes","ViewPropTypes","style","PropTypes","oneOfType","object","number","array","StyledActionSheetContainer","mapPropsToStyleNames"],"mappings":"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","file":"Actionsheet.js","sourcesContent":["import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport {\n    View,\n    Modal,\n    Platform,\n    ActionSheetIOS,\n    TouchableOpacity,\n    ViewPropTypes,\n    FlatList,\n    Dimensions\n} from \"react-native\";\nimport { connectStyle } from \"native-base-shoutem-theme\";\nimport { Text } from \"./Text\";\nimport { Button } from \"./Button\";\nimport { ViewNB } from \"./View\";\nimport { Icon } from \"./Icon\";\nimport { Left } from \"./Left\";\nimport { Right } from \"./Right\";\nimport { Body } from \"./Body\";\nimport { ListItem } from \"./ListItem\";\nimport mapPropsToStyleNames from \"../utils/mapPropsToStyleNames\";\n\nclass ActionSheetContainer extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            modalVisible: false,\n            items: []\n        };\n    }\n    static actionsheetInstance;\n    static show(config, callback) {\n        this.actionsheetInstance._root.showActionSheet(config, callback);\n    }\n    static hide() {\n        this.actionsheetInstance._root.hideActionSheet();\n    }\n    showActionSheet(config, callback) {\n        if (Platform.OS === \"ios\") {\n            if (typeof config.options[0] == \"object\") {\n                let options = config.options;\n                let filtered = options.map(item => {\n                    return item.text;\n                });\n                config.options = filtered;\n                ActionSheetIOS.showActionSheetWithOptions(config, callback);\n            } else {\n                ActionSheetIOS.showActionSheetWithOptions(config, callback);\n            }\n        } else {\n            this.setState({\n                items: config.options,\n                title: config.title,\n                message: config.message,\n                destructiveButtonIndex: config.destructiveButtonIndex,\n                cancelButtonIndex: config.cancelButtonIndex,\n                modalVisible: true,\n                callback: callback\n            });\n        }\n    }\n\n    hideActionSheet() {\n        this.setState({ modalVisible: false });\n    }\n\n    componentDidMount() {\n        if (!this.props.autoHide && this.props.duration) {\n            console.warn(`It's not recommended to set autoHide false with duration`);\n        }\n    }\n    render() {\n        return (\n            <Modal\n                animationType={\"fade\"}\n                transparent={true}\n                visible={this.state.modalVisible}\n                onRequestClose={() => {\n                    this.state.callback(this.state.cancelButtonIndex);\n                    this.setState({ modalVisible: false });\n                }}\n            >\n                <TouchableOpacity\n                    activeOpacity={1}\n                    onPress={() => {\n                        this.state.callback(this.state.cancelButtonIndex);\n                        this.setState({ modalVisible: false });\n                    }}\n                    style={{\n                        backgroundColor: \"rgba(0,0,0,0.4)\",\n                        flex: 1,\n                        justifyContent: \"flex-end\"\n                    }}\n                >\n                    <TouchableOpacity\n                        activeOpacity={1}\n                        style={{\n                            backgroundColor: \"#fff\",\n                            minHeight: 56,\n                            height: this.state.length * 80,\n                            maxHeight: Dimensions.get(\"window\").height / 2,\n                            padding: 15,\n                            elevation: 4\n                        }}\n                    >\n                        {this.state.title ? (\n                            <Text style={{ color: \"#757575\" }}>{this.state.title}</Text>\n                        ) : null}\n                        <FlatList\n                            style={{\n                                marginHorizontal: -15,\n                                marginTop: this.state.title ? 15 : 0\n                            }}\n                            data={this.state.items}\n                            keyExtractor={(item, index) => String(index)}\n                            renderItem={({ index, item }) => {\n                                return typeof this.state.items[0] === \"string\" ? (\n                                    <ListItem\n                                        onPress={() => {\n                                            this.state.callback(parseInt(index));\n                                            this.setState({ modalVisible: false });\n                                        }}\n                                        style={{ borderColor: \"transparent\", marginLeft: 14 }}\n                                    >\n                                        <Text\n                                            style={{ color: this.state.cancelButtonIndex === index ? '#d10000' : 'black' }}\n                                        >{item}</Text>\n                                    </ListItem>\n                                ) : (\n                                        <ListItem\n                                            onPress={() => {\n                                                this.state.callback(parseInt(index));\n                                                this.setState({ modalVisible: false });\n                                            }}\n                                            style={{\n                                                borderColor: \"transparent\",\n                                                marginLeft: 14,\n                                                height: 50\n                                            }}\n                                            icon\n                                        >\n                                            <Left>\n                                                <Icon\n                                                    name={item.icon}\n                                                    style={{\n                                                        color: item.iconColor ? item.iconColor : undefined\n                                                    }}\n                                                />\n                                            </Left>\n                                            <Body\n                                                style={{ borderColor: \"transparent\", paddingLeft: 7 }}\n                                            >\n                                                <Text>{item.text}</Text>\n                                            </Body>\n                                            <Right />\n                                        </ListItem>\n                                    );\n                            }}\n                        />\n                    </TouchableOpacity>\n                </TouchableOpacity>\n            </Modal>\n        );\n    }\n}\n\nActionSheetContainer.propTypes = {\n    ...ViewPropTypes,\n    style: PropTypes.oneOfType([\n        PropTypes.object,\n        PropTypes.number,\n        PropTypes.array\n    ])\n};\n\nconst StyledActionSheetContainer = connectStyle(\n    \"NativeBase.ActionSheetContainer\",\n    {},\n    mapPropsToStyleNames\n)(ActionSheetContainer);\n\nexport { StyledActionSheetContainer as ActionSheetContainer };\n"]}